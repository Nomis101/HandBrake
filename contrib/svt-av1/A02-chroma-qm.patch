From f5a4e67dbf47f29addf4501171a40317032551bf Mon Sep 17 00:00:00 2001
From: Nomis101 <Nomis101@web.de>
Date: Tue, 15 Jul 2025 20:36:42 +0200
Subject: chroma-qm

Signed-off-by: Nomis101 <Nomis101@web.de>
---
 Docs/Parameters.md                   | 28 ++++++++++++++++++----------
 Source/API/EbSvtAv1Enc.h             | 20 +++++++++++++++++++-
 Source/App/app_config.c              |  6 ++++++
 Source/Lib/Codec/md_config_process.c | 16 +++++++++++-----
 Source/Lib/Codec/pcs.h               |  2 ++
 Source/Lib/Globals/enc_handle.c      | 11 +++++++++--
 Source/Lib/Globals/enc_settings.c    | 15 ++++++++++++---
 7 files changed, 77 insertions(+), 21 deletions(-)

diff --git a/Docs/Parameters.md b/Docs/Parameters.md
index d0048dac..d8e1e1de 100644
--- a/Docs/Parameters.md
+++ b/Docs/Parameters.md
@@ -120,6 +120,8 @@ For more information on valid values for specific keys, refer to the [EbEncSetti
 | **EnableQM**                     | --enable-qm                      | [0-1]      | 0           | Enable quantisation matrices                                                                                                                         |
 | **MinQmLevel**                   | --qm-min                         | [0-15]     | 8           | Min quant matrix flatness                                                                                                                            |
 | **MaxQmLevel**                   | --qm-max                         | [0-15]     | 15          | Max quant matrix flatness                                                                                                                            |
+| **MinChromaQmLevel**             | --chroma-qm-min                  | [0-15]     | 8           | Min chroma quant matrix flatness                                                                                                                     |
+| **MaxChromaQmLevel**             | --chroma-qm-max                  | [0-15]     | 15          | Max chroma quant matrix flatness                                                                                                                     |
 | **LambdaScaleFactors**           | --lambda-scale-factors           | [0- ]      | '128,.,128' | list of scale factors for lambda values used for different SvtAv1FrameUpdateType, separated by `,` divide by 128 is the actual scale factor in float |
 | **RoiMapFile**                   | --roi-map-file                   | any string | Null        | Path to a file containing picture based QP offset map                                                                                                |
 | **TemporalFilteringStrength**    | --tf-strength                    | [0-4]      | 3           | Manually adjust temporal filtering strength. Higher values = stronger temporal filtering                                                             |
@@ -170,16 +172,16 @@ For this command line, corresponding qindex values are:
 ### **EnableQM** and more information
 
 With `EnableQM`, `MinQmLevel` and `MaxQmLevel`, user can customize the quantization
-matrix used in quantization procedure instead of using the default one. With the default
-quantization matrix, all coefficients share the same weight, whereas with non-default ones,
-coefficients can have different weight through the settings made by users. The deviation
-of weight (or flatness, equivalently) is controlled by arguments `MinQmLevel` and `MaxQmLevel`.
-There are sixteen quantization matrix levels, ranging from level 0 to level 15. The lower
-the level is the larger deviation of weight the quantization matrix will provide. Level 15
-is fully flat in weight and is set as the default quantization matrix. A lower level
-quantization matrix typically results in bitstreams with lower bitrate and slightly worse
-quality in CRF rate control mode. The reduction in bitrate is more obvious with low CRF
-than high CRF.
+matrix used in luma quantization procedure (`MinChromaQmLevel` & `MaxChromaQmLevel` for chroma control)
+instead of using the default one. With the default quantization matrix, all coefficients share the
+same weight, whereas with non-default ones, coefficients can have different weight throughMore actions
+the settings made by users. The deviation of weight (or flatness, equivalently)
+is controlled by arguments `MinQmLevel` and `MaxQmLevel`. There are sixteen quantization matrix levels,
+ranging from level 0 to level 15. The lower the level is the larger deviation of weight the
+quantization matrix will provide. Level 15 is fully flat in weight and is set as the default
+quantization matrix. A lower level quantization matrix typically results in bitstreams with
+lower bitrate and slightly worse quality in CRF rate control mode. The reduction in bitrate is more
+obvious with low CRF than high CRF.
 
 The quantization matrices feature signals at frame level. When the feature is enabled,
 the encoder decides each frameâ€™s quantization matrix level by normalizing its qindex to
@@ -191,6 +193,12 @@ An example command line is:
 SvtAv1EncApp -i in.y4m -b out.ivf --keyint -1 --enable-qm 1 --qm-min 0 --qm-max 15
 ```
 
+Another example with chroma QM min/max specified:
+
+```bash
+SvtAv1EncApp -i in.y4m -b out.ivf --keyint -1 --enable-qm 1 --qm-min 0 --qm-max 15 --chroma-qm-min 4 --chroma-qm-max 8
+```
+
 ### Recode loop level table
 
 | level | description                                                                     |
diff --git a/Source/API/EbSvtAv1Enc.h b/Source/API/EbSvtAv1Enc.h
index 55f410a2..1efc8604 100644
--- a/Source/API/EbSvtAv1Enc.h
+++ b/Source/API/EbSvtAv1Enc.h
@@ -846,6 +846,7 @@ typedef struct EbSvtAv1EncConfiguration {
      * Default is false.
      */
     bool enable_qm;
+
     /**
      * @brief Min quant matrix flatness. Applicable when enable_qm is true.
      * Min value is 0.
@@ -989,6 +990,23 @@ typedef struct EbSvtAv1EncConfiguration {
      * Default is false.
      */
     bool avif;
+
+    /**
+     * @brief Min chroma quant matrix flatness. Applicable when enable_qm is true.
+     * Min value is 0.
+     * Max value is 15.
+     * Default is 8.
+     */
+    uint8_t min_chroma_qm_level;
+
+    /**
+     * @brief Max chroma quant matrix flatness. Applicable when enable_qm is true.
+     * Min value is 0.
+     * Max value is 15.
+     * Default is 15.
+     */
+    uint8_t max_chroma_qm_level;
+
 #if FTR_RTC_MODE
     /* @brief Signal to the library to enable real-time coding
      *
@@ -998,7 +1016,7 @@ typedef struct EbSvtAv1EncConfiguration {
 #endif
     // clang-format off
     /*Add 128 Byte Padding to Struct to avoid changing the size of the public configuration struct*/
-    uint8_t padding[128
+    uint8_t padding[128 - (sizeof(uint8_t) * 2)
 #if FTR_RTC_MODE
         - sizeof(bool)
 #endif
diff --git a/Source/App/app_config.c b/Source/App/app_config.c
index a7b7aebe..c2f3cede 100644
--- a/Source/App/app_config.c
+++ b/Source/App/app_config.c
@@ -184,6 +184,8 @@
 #define ENABLE_QM_TOKEN "--enable-qm"
 #define MIN_QM_LEVEL_TOKEN "--qm-min"
 #define MAX_QM_LEVEL_TOKEN "--qm-max"
+#define MIN_CHROMA_QM_LEVEL_TOKEN "--chroma-qm-min"
+#define MAX_CHROMA_QM_LEVEL_TOKEN "--chroma-qm-max"
 
 #define STARTUP_MG_SIZE_TOKEN "--startup-mg-size"
 #define STARTUP_QP_OFFSET_TOKEN "--startup-qp-offset"
@@ -786,6 +788,8 @@ ConfigDescription config_entry_rc[] = {
     {ENABLE_QM_TOKEN, "Enable quantisation matrices, default is 0 [0-1]"},
     {MIN_QM_LEVEL_TOKEN, "Min quant matrix flatness, default is 8 [0-15]"},
     {MAX_QM_LEVEL_TOKEN, "Max quant matrix flatness, default is 15 [0-15]"},
+    {MIN_CHROMA_QM_LEVEL_TOKEN, "Min chroma quant matrix flatness, default is 8 [0-15]"},
+    {MAX_CHROMA_QM_LEVEL_TOKEN, "Max chroma quant matrix flatness, default is 15 [0-15]"},
 #endif
     {ROI_MAP_FILE_TOKEN, "Enable Region Of Interest and specify a picture based QP Offset map file, default is off"},
     // TF Strength
@@ -1114,6 +1118,8 @@ ConfigEntry config_entry[] = {
     {ENABLE_QM_TOKEN, "EnableQM", set_cfg_generic_token},
     {MIN_QM_LEVEL_TOKEN, "MinQmLevel", set_cfg_generic_token},
     {MAX_QM_LEVEL_TOKEN, "MaxQmLevel", set_cfg_generic_token},
+    {MIN_CHROMA_QM_LEVEL_TOKEN, "MinChromaQmLevel", set_cfg_generic_token},
+    {MAX_CHROMA_QM_LEVEL_TOKEN, "MaxChromaQmLevel", set_cfg_generic_token},
 #endif
     // ROI
     {ROI_MAP_FILE_TOKEN, "RoiMapFile", set_cfg_roi_map_file},
diff --git a/Source/Lib/Codec/md_config_process.c b/Source/Lib/Codec/md_config_process.c
index b438c9fb..03cbe2c4 100644
--- a/Source/Lib/Codec/md_config_process.c
+++ b/Source/Lib/Codec/md_config_process.c
@@ -245,15 +245,21 @@ void svt_av1_qm_init(PictureParentControlSet *pcs) {
 #endif // CONFIG_ENABLE_QUANT_MATRIX
 
     if (pcs->frm_hdr.quantization_params.using_qmatrix) {
-        const int32_t min_qmlevel = pcs->scs->static_config.min_qm_level;
-        const int32_t max_qmlevel = pcs->scs->static_config.max_qm_level;
-        const int32_t base_qindex = pcs->frm_hdr.quantization_params.base_q_idx;
+        const int32_t min_qmlevel        = pcs->scs->static_config.min_qm_level;
+        const int32_t max_qmlevel        = pcs->scs->static_config.max_qm_level;
+        const int32_t min_chroma_qmlevel = pcs->scs->static_config.min_chroma_qm_level;
+        const int32_t max_chroma_qmlevel = pcs->scs->static_config.max_chroma_qm_level;
+        const int32_t base_qindex        = pcs->frm_hdr.quantization_params.base_q_idx;
 
         pcs->frm_hdr.quantization_params.qm[AOM_PLANE_Y] = aom_get_qmlevel(base_qindex, min_qmlevel, max_qmlevel);
         pcs->frm_hdr.quantization_params.qm[AOM_PLANE_U] = aom_get_qmlevel(
-            base_qindex + pcs->frm_hdr.quantization_params.delta_q_ac[AOM_PLANE_U], min_qmlevel, max_qmlevel);
+            base_qindex + pcs->frm_hdr.quantization_params.delta_q_ac[AOM_PLANE_U],
+            min_chroma_qmlevel,
+            max_chroma_qmlevel);
         pcs->frm_hdr.quantization_params.qm[AOM_PLANE_V] = aom_get_qmlevel(
-            base_qindex + pcs->frm_hdr.quantization_params.delta_q_ac[AOM_PLANE_V], min_qmlevel, max_qmlevel);
+            base_qindex + pcs->frm_hdr.quantization_params.delta_q_ac[AOM_PLANE_V],
+            min_chroma_qmlevel,
+            max_chroma_qmlevel);
 #if DEBUG_QM_LEVEL
         SVT_LOG("\n[svt_av1_qm_init] Frame %d - qindex %d, qmlevel %d %d %d\n",
                 (int)pcs->picture_number,
diff --git a/Source/Lib/Codec/pcs.h b/Source/Lib/Codec/pcs.h
index 26cf5d72..03c8b3f3 100644
--- a/Source/Lib/Codec/pcs.h
+++ b/Source/Lib/Codec/pcs.h
@@ -1027,6 +1027,8 @@ typedef struct PictureParentControlSet {
     const QmVal *gqmatrix[NUM_QM_LEVELS][3][TX_SIZES_ALL];
     int32_t      min_qmlevel;
     int32_t      max_qmlevel;
+    int32_t      min_chroma_qmlevel;
+    int32_t      max_chroma_qmlevel;
     // Encoder
     LoopFilterInfoN lf_info;
 
diff --git a/Source/Lib/Globals/enc_handle.c b/Source/Lib/Globals/enc_handle.c
index 03c85ba1..4c352eda 100644
--- a/Source/Lib/Globals/enc_handle.c
+++ b/Source/Lib/Globals/enc_handle.c
@@ -5712,8 +5712,15 @@ static void copy_api_from_app(
     scs->static_config.enable_qm = config_struct->enable_qm;
     scs->static_config.min_qm_level = config_struct->min_qm_level;
     scs->static_config.max_qm_level = config_struct->max_qm_level;
-    if (scs->static_config.enable_qm && scs->static_config.min_qm_level == 15 && scs->static_config.max_qm_level == 15) {
-        SVT_WARN("Quantization matrices will be forced off since both min and max quant matrix levels are set to 15\n");
+    scs->static_config.min_chroma_qm_level = config_struct->min_chroma_qm_level;
+    scs->static_config.max_chroma_qm_level = config_struct->max_chroma_qm_level;
+    if (scs->static_config.enable_qm &&
+        scs->static_config.min_qm_level == 15 &&
+        scs->static_config.max_qm_level == 15 &&
+        scs->static_config.min_chroma_qm_level == 15 &&
+        scs->static_config.max_chroma_qm_level == 15)
+    {
+        SVT_WARN("Quantization matrices will be forced off since all min/max quant matrix levels are set to 15\n");
         scs->static_config.enable_qm = 0;
     }
     if (scs->static_config.enable_qm && scs->static_config.lossless) {
diff --git a/Source/Lib/Globals/enc_settings.c b/Source/Lib/Globals/enc_settings.c
index 1048721e..7b40b0d7 100644
--- a/Source/Lib/Globals/enc_settings.c
+++ b/Source/Lib/Globals/enc_settings.c
@@ -873,6 +873,11 @@ EbErrorType svt_av1_verify_settings(SequenceControlSet *scs) {
                   channel_number + 1);
         return_error = EB_ErrorBadParameter;
     }
+    if (config->enable_qm && config->min_chroma_qm_level > config->max_chroma_qm_level) {
+        SVT_ERROR("Instance %u:  Min chroma quant matrix level must not greater than max chroma quant matrix level\n",
+                  channel_number + 1);
+        return_error = EB_ErrorBadParameter;
+    }
     if (config->startup_mg_size != 0 && config->startup_mg_size != 2 && config->startup_mg_size != 3 &&
         config->startup_mg_size != 4) {
         SVT_ERROR("Instance %u: Startup MG size supported [0, 2, 3, 4]\n", channel_number + 1);
@@ -1069,9 +1074,11 @@ EbErrorType svt_av1_set_default_params(EbSvtAv1EncConfiguration *config_ptr) {
     config_ptr->force_key_frames = 0;
 
     // Quant Matrices (QM)
-    config_ptr->enable_qm    = 0;
-    config_ptr->min_qm_level = 8;
-    config_ptr->max_qm_level = 15;
+    config_ptr->enable_qm           = 0;
+    config_ptr->min_qm_level        = 8;
+    config_ptr->max_qm_level        = 15;
+    config_ptr->min_chroma_qm_level = 8;
+    config_ptr->max_chroma_qm_level = 15;
 
     config_ptr->startup_mg_size                   = 0;
     config_ptr->startup_qp_offset                 = 0;
@@ -2109,6 +2116,8 @@ EB_API EbErrorType svt_av1_enc_parse_parameter(EbSvtAv1EncConfiguration *config_
         {"resize-kf-denom", &config_struct->resize_kf_denom},
         {"qm-min", &config_struct->min_qm_level},
         {"qm-max", &config_struct->max_qm_level},
+        {"chroma-qm-min", &config_struct->min_chroma_qm_level},
+        {"chroma-qm-max", &config_struct->max_chroma_qm_level},
         {"use-fixed-qindex-offsets", &config_struct->use_fixed_qindex_offsets},
         {"startup-mg-size", &config_struct->startup_mg_size},
         {"variance-boost-strength", &config_struct->variance_boost_strength},
-- 
2.50.1

